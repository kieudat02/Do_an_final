const HomeSection = require('../models/homeSectionModel');
const Category = require('../models/categoriesModel');

const homeSections = [
    {
        title: "Tour N·ªïi B·∫≠t",
        order: 1,
        isActive: true,
        moreButtonTitle: "Xem t·∫•t c·∫£ tour n·ªïi b·∫≠t",
        moreButtonSubtitle: "Kh√°m ph√° nh·ªØng tour ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t",
        filterQuery: { highlight: true, status: true }
    },
    {
        title: "Tour Trong N∆∞·ªõc",
        order: 2,
        isActive: true,
        moreButtonTitle: "Xem th√™m tour trong n∆∞·ªõc",
        moreButtonSubtitle: "Kh√°m ph√° v·∫ª ƒë·∫πp Vi·ªát Nam",
        filterQuery: { domestic: true, status: true }
    },
    {
        title: "Tour Ch√¢u √Å",
        order: 3,
        isActive: true,
        moreButtonTitle: "Kh√°m ph√° ch√¢u √Å",
        moreButtonSubtitle: "Tr·∫£i nghi·ªám vƒÉn h√≥a ƒëa d·∫°ng",
        filterQuery: { region: "Asia", status: true }
    },
    {
        title: "Tour M√πa Thu",
        order: 4,
        isActive: true,
        moreButtonTitle: "Tour m√πa thu",
        moreButtonSubtitle: "Ng·∫Øm l√° v√†ng r∆°i th∆° m·ªông",
        filterQuery: { season: "autumn", status: true }
    },
    {
        title: "Tour Cao C·∫•p",
        order: 5,
        isActive: true,
        moreButtonTitle: "Tour luxury",
        moreButtonSubtitle: "Tr·∫£i nghi·ªám sang tr·ªçng ƒë·∫≥ng c·∫•p",
        filterQuery: { priceRange: "luxury", status: true }
    },
    {
        title: "∆Øu ƒê√£i ƒê·∫∑c Bi·ªát",
        order: 6,
        isActive: true,
        moreButtonTitle: "Xem t·∫•t c·∫£ ∆∞u ƒë√£i",
        moreButtonSubtitle: "Ti·∫øt ki·ªám t·ªõi 50% cho chuy·∫øn ƒëi",
        filterQuery: { hasDiscount: true, status: true }
    }
];

const seedHomeSections = async () => {
    try {
        // X√≥a t·∫•t c·∫£ home sections c≈©
        await HomeSection.deleteMany({});
        console.log('üóëÔ∏è ƒê√£ x√≥a t·∫•t c·∫£ home sections c≈©');

        // L·∫•y m·ªôt s·ªë categories ƒë·ªÉ g√°n cho home sections
        const categories = await Category.find({ status: "Ho·∫°t ƒë·ªông" }).limit(6);
        
        // G√°n categories cho home sections (m·ªói section c√≥ th·ªÉ c√≥ 1-2 categories)
        const homeSectionsWithCategories = homeSections.map((section, index) => {
            const categoriesForSection = [];
            
            // G√°n category ƒë·∫ßu ti√™n n·∫øu c√≥
            if (categories[index]) {
                categoriesForSection.push(categories[index]._id);
            }
            
            // M·ªôt s·ªë section c√≥ th·ªÉ c√≥ th√™m category th·ª© 2
            if (index % 2 === 0 && categories[index + 1]) {
                categoriesForSection.push(categories[index + 1]._id);
            }

            return {
                ...section,
                categories: categoriesForSection,
                createdBy: null, // S·∫Ω ƒë∆∞·ª£c set th√†nh null v√¨ ch∆∞a c√≥ User system
                updatedBy: null
            };
        });

        // Th√™m home sections m·ªõi
        const createdHomeSections = await HomeSection.insertMany(homeSectionsWithCategories);
        console.log(`‚úÖ ƒê√£ t·∫°o ${createdHomeSections.length} home sections th√†nh c√¥ng!`);
        
        // In ra danh s√°ch home sections ƒë√£ t·∫°o
        createdHomeSections.forEach(homeSection => {
            console.log(`   - ${homeSection.title} (Order: ${homeSection.order}, Active: ${homeSection.isActive}, Slug: ${homeSection.moreButtonSlug})`);
        });

        return createdHomeSections;
    } catch (error) {
        console.error('‚ùå L·ªói khi seed home sections:', error);
        throw error;
    }
};

module.exports = { 
    seedHomeSections,
    homeSections
};
