const mongoose = require('mongoose');
const Order = require('../models/orderModel');
require('dotenv').config();
require('../config/database');

const deleteAllOrders = async () => {
  try {
    console.log('üóëÔ∏è B·∫Øt ƒë·∫ßu x√≥a t·∫•t c·∫£ ƒë∆°n h√†ng...');

    // ƒê·∫øm s·ªë ƒë∆°n h√†ng hi·ªán t·∫°i
    const orderCount = await Order.countDocuments();
    console.log(`üìä T√¨m th·∫•y ${orderCount} ƒë∆°n h√†ng trong database`);

    if (orderCount === 0) {
      console.log('‚úÖ Database ƒë√£ s·∫°ch, kh√¥ng c√≥ ƒë∆°n h√†ng n√†o ƒë·ªÉ x√≥a');
      return;
    }

    // X√≥a t·∫•t c·∫£ ƒë∆°n h√†ng
    const result = await Order.deleteMany({});
    console.log(`‚úÖ ƒê√£ x√≥a th√†nh c√¥ng ${result.deletedCount} ƒë∆°n h√†ng`);

    // Ki·ªÉm tra l·∫°i ƒë·ªÉ ƒë·∫£m b·∫£o ƒë√£ x√≥a h·∫øt
    const remainingCount = await Order.countDocuments();
    if (remainingCount === 0) {
      console.log('üéâ Ho√†n th√†nh! T·∫•t c·∫£ ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi database');
    } else {
      console.log(`‚ö†Ô∏è C·∫£nh b√°o: V·∫´n c√≤n ${remainingCount} ƒë∆°n h√†ng trong database`);
    }

    // Disconnect from database only if this file is run directly
    if (require.main === module) {
      mongoose.disconnect();
    }
  } catch (error) {
    console.error('‚ùå L·ªói khi x√≥a ƒë∆°n h√†ng:', error);
    if (require.main === module) {
      process.exit(1);
    } else {
      throw error;
    }
  }
};

// Run the seeder if this file is run directly
if (require.main === module) {
  // Make sure database connection is established
  const options = {
    user: process.env.DB_USER,
    pass: process.env.DB_PASSWORD,
    dbName: process.env.DB_NAME,
    serverSelectionTimeoutMS: 5000,
    socketTimeoutMS: 45000,
    family: 4,
  };

  mongoose
    .connect(process.env.DB_HOST, options)
    .then(() => {
      console.log("‚úÖ ƒê√£ k·∫øt n·ªëi database");
      return deleteAllOrders();
    })
    .then(() => {
      mongoose.disconnect();
      console.log("üîå ƒê√£ ng·∫Øt k·∫øt n·ªëi database");
    })
    .catch((error) => {
      console.error("‚ùå L·ªói:", error);
      mongoose.disconnect();
    });
}

module.exports = deleteAllOrders;

// cd backend
// node src/seeder/deleteOrdersSeeder.js